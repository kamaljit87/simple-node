version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: simple-node
    AWS_REGION: us-east-1
    STACK_NAME: simple-node-full-stack
    CF_TEMPLATE_FILE: cloudformation/main.yaml
    CONTAINER_NAME: hello-docker

phases:
  install:
    runtime-versions:
      docker: 19
    commands:
      - echo "Installing dependencies"
      - aws --version
      - docker --version

  pre_build:
    commands:
      - echo "========== Pre-Build Phase =========="
      - echo "Setting environment variables..."
      - export ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - export IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
      - export IMAGE_URI="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
      - export REPO_URI="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
      - echo "ACCOUNT_ID=$ACCOUNT_ID"
      - echo "IMAGE_TAG=$IMAGE_TAG"
      - echo "IMAGE_URI=$IMAGE_URI"
      - echo "Checking ECR repository..."
      - aws ecr describe-repositories --repository-names "${IMAGE_REPO_NAME}" --region "${AWS_REGION}" || aws ecr create-repository --repository-name "${IMAGE_REPO_NAME}" --region "${AWS_REGION}" --image-scanning-configuration scanOnPush=true
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region "${AWS_REGION}" | docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
      - echo "Login successful"

  build:
    commands:
      - echo "========== Build Phase =========="
      - echo "Building Docker image..."
      - docker build -t "${IMAGE_REPO_NAME}:${IMAGE_TAG}" .
      - echo "Tagging images..."
      - docker tag "${IMAGE_REPO_NAME}:${IMAGE_TAG}" "${IMAGE_URI}"
      - docker tag "${IMAGE_REPO_NAME}:${IMAGE_TAG}" "${REPO_URI}:latest"
      - echo "Pushing to ECR..."
      - docker push "${IMAGE_URI}"
      - docker push "${REPO_URI}:latest"
      - echo "Push complete"

  post_build:
    commands:
      - echo "========== Post-Build Phase =========="
      - echo "Creating imagedefinitions.json..."
      - printf '[{"name":"%s","imageUri":"%s"}]' "${CONTAINER_NAME}" "${IMAGE_URI}" > imagedefinitions.json
      - cat imagedefinitions.json
      - echo "Deploying CloudFormation stack..."
      - aws cloudformation deploy --template-file "${CF_TEMPLATE_FILE}" --stack-name "${STACK_NAME}" --capabilities CAPABILITY_NAMED_IAM --parameter-overrides ImageUri="${IMAGE_URI}" EnvironmentName="${STACK_NAME}" GitHubRepo="kamaljit87/simple-node"
      - echo "Deployment complete"
      - echo "Getting stack outputs..."
      - aws cloudformation describe-stacks --stack-name "${STACK_NAME}" --query 'Stacks[0].Outputs' --output table

artifacts:
  files:
    - imagedefinitions.json

cache:
  paths:
    - '/root/.docker/**/*'