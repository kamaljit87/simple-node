version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: simple-node
    AWS_REGION: us-east-1
    STACK_NAME: simple-node-full-stack
    CF_TEMPLATE_FILE: cloudformation/main.yaml

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo "install: aws & docker"
      - aws --version

  pre_build:
    commands:
      - echo "set vars"
      - export ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - export IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
      - export IMAGE_URI="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
      - echo "ACCOUNT_ID=$ACCOUNT_ID"
      - echo "IMAGE_TAG=$IMAGE_TAG"
      - echo "IMAGE_URI=$IMAGE_URI"
      - echo "check/create ECR repo ${IMAGE_REPO_NAME}"
      - if aws ecr describe-repositories --repository-names "${IMAGE_REPO_NAME}" --region "${AWS_REGION}" >/dev/null 2>&1; then echo "ECR repo exists"; else echo "ECR repo missing. Creating..."; aws ecr create-repository --repository-name "${IMAGE_REPO_NAME}" --region "${AWS_REGION}" || { echo "create-repo failed"; exit 1; }; fi
      - aws ecr get-login-password --region "${AWS_REGION}" | docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

  build:
    commands:
      - echo "building image"
      - docker build -t "${IMAGE_REPO_NAME}" .
      - docker tag "${IMAGE_REPO_NAME}" "${IMAGE_URI}"
      - docker push "${IMAGE_URI}"

  post_build:
    commands:
      - echo "image pushed: ${IMAGE_URI}"
      - printf '[{"name":"%s","imageUri":"%s"}]' "${IMAGE_REPO_NAME}" "${IMAGE_URI}" > imagedefinitions.json
      - cat imagedefinitions.json
      - aws cloudformation deploy --template-file "${CF_TEMPLATE_FILE}" --stack-name "${STACK_NAME}" --capabilities CAPABILITY_NAMED_IAM CAPABILITY_IAM --parameter-overrides ImageUri="${IMAGE_URI}" CreateEcr="false"

artifacts:
  files:
    - imagedefinitions.json
